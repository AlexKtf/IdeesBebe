- name = current_user.is_owner_of?(@product) ? @user.username : current_user.username
#status-show
  .ui.grid.stackable
    .row
      .sixteen.wide.column
        %h3.ui.header.block.black
          %i.icon.chat
          = I18n.t('common.my_conversation_with', name: name)
        .about
          = current_user.is_owner_of?(@product) ? I18n.t('messages.index.about_my_product_cap') : I18n.t('messages.index.about_product_of_another_cap') 
          = link_to @product.name, product_path(@product.slug)
          - if current_user.is_owner_of?(@product) and not @product.selled? and not @status.closed
            .closed-button.right
              = simple_form_for @status, url: product_status_path(product_id: @product.slug, id: @user.slug), method: :put, remote: true do |f|
                = f.hidden_field :closed, value: true
                = f.button :button, class: 'ui negative button starpop small', 'data-content' => I18n.t('tooltip.messages.index.close'), 'data-variation' => 'inverted' do
                  %i.icon.ban.circle
    .row
      - if current_user.is_owner_of?(@product)
        .five.column.wide
          .ui.segment.no-left-right-padding.status-list
            .ui.vertical.menu
              - @product.status.order('created_at DESC').each do |status|
                - active = status.user == @receiver ? 'active' : ''
                = link_to product_status_path(product_id: @product.slug, id: status.user.slug, anchor: 'last-message'), class: "item teal #{active}" do
                  = status.user.username
                  - if status.pending_messages_count > 0 and not status.closed and not @product.selled?
                    .ui.label.teal
                      %i.mail.icon
      .eleven.wide.column
        .ui.segment.piled.feed
          #conversation.ui.comments
            - @status.messages.includes(:sender).order(:created_at).each do |message|
              - align = message.sender == current_user ? 'left' : 'right'
              = render 'messages/message', message: message, align: align
          #block-form-status-show
            .cant-respond
              - if @product.selled?
                = render 'status_done'
              - elsif @status.closed
                = render 'status_closed'
              - elsif @status.can_send_message? current_user
                #conversation-form
                  = simple_form_for Message.new, url: product_messages_path(product_id: @product.id), remote: true, class: 'ui reply form' do |f|
                    = f.input :content, label: false, required: false, as: :text
                    = f.hidden_field :receiver_id, value: current_user.is_owner_of?(@product) ? @status.user_id : @product.user_id
                    = f.hidden_field :status_id, value: @status.id
                    = f.button :button, class: 'ui fluid purple submit button' do
                      = I18n.t('common.respond')
              - else
                .status-situation
                  = I18n.t('messages.form.has_not_reply_yet', name: name)
